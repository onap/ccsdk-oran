schemas:
  PolicyTypeInformation:
    description: >-
      A data tuple to indicate that an identified A1 Policy Type is supported at an identified Near-RT RIC.
    type: object
    properties:
      policyTypeId:
        description: A1 Policy Type identifier
        type: string
      nearRtRicId:
        $ref: '#/schemas/NearRtRicId'
    required:
      - policyTypeId
      - nearRtRicId
    example:
      policyTypeId: STD_QOS2_0.1.0
      nearRtRicId: ric_g3_2
  PolicyObjectInformation:
    description: Information to create an A1 Policy Instance
    type: object
    properties:
      nearRtRicId:
        description: Identity of the target Near-RT RIC
        type: string
        example:
          'Near-RT-Ric-ID1'
      transient:
        default: false
        description: >
          If true, the policy is automatically deleted if the targeted Near-RT RIC restarts 
          or recovers. If false, the A1 Policy Instance remains, and is re-pushed to the targeted 
          Near-RT RIC after a restart or recovery. If false, the A1 Policy Instance is maintained and 
          must be deleted separately in the event of Near-RT RIC restart or recovery. Default is false.
        nullable: false
        type: boolean
      policyId:
        description: >
          An optional identity to be used for the new A1 Policy Instance. 
          If this value is present, it must be unique. If not present the new A1 
          Policy Instance will be assigned a newly generated unique ID, and the 
          new ID can be extracted from the 'Location' header in the response.
        type: string
        example:
          'POLICY-ID1'
      serviceId:
        description: the identity of the service owning the policy. This can be
          used to group the policies (it is possible to get all policies associated
          to a service). Note that the service does not need to be registered.
          If the service is registered, the newly created A1 Policy Instance will be
          subject to the same supervision rules as the the service's other policies.
        type: string
        example:
          'rApp 1'
        default: ""
      policyObject:
        $ref: '#/schemas/PolicyObject'
      policyTypeId:
        description: A1 Policy Type identity
        type: string
        example: ORAN_QOS_1.0.0 '(typeName_SemVersion)'
    required:
      - nearRtRicId
      - policyObject
      - policyTypeId
  ErrorInformation:
    description: Problem as defined in https://tools.ietf.org/html/rfc7807
    properties:
      detail:
        description: A human-readable explanation specific to this occurrence of the problem.
        example: Policy type not found
        type: string
      title:
        description: A specific error name
        type: string
        example: Not Found
      status:
        description: |
          The HTTP status code generated by the origin server for this occurrence of the problem.
        example: 404
        format: int32
        type: integer
    type: object
  PolicyObject:
    description: >
      Policy Object is a JSON representation policy data for an A1 Policy Instance.
      The schema for this policy data is defined in the corresponding A1 Policy Type.
    type: object
  PolicyTypeObject:
    description: An A1 Policy Type, as defined in O-RAN Alliance A1TD
    type: object
    properties:
      policySchema:
        $ref: '#/schemas/PolicySchema'
      statusSchema:
        $ref: '#/schemas/StatusSchema'
    required:
      - policySchema
    example:
      policySchema:
        "$schema": http://json-schema.org/draft-07/schema#
        title: STD_QOS_0_2_0
        description: Policy data schema for STD_QOS_0.2.0 A1 Policy Instances.
        type: object
        properties:
          scope:
            type: object
            properties:
              ueId:
                type: string
              qosId:
                type: string
            additionalProperties: false
            required:
              - ueId
              - qosId
          qosObjectives:
            type: object
            properties:
              priorityLevel:
                type: number
            additionalProperties: false
            required:
              - priorityLevel
      statusSchema:
        "$schema": http://json-schema.org/draft-07/schema#
        title: STD_QOS_0.2.0
        description: Status schema for STD_QOS_0.2.0 A1 Policy Instances.
        type: object
        properties:
          enforceStatus:
            type: string
          enforceReason:
            type: string
          additionalProperties: false
          required:
            - enforceStatus
  PolicySchema:
    description: >
      A schema to define the policy data contents of A1 Policy Instances. 
      Policy data schemas are Policy Type specific. 
      All A1 Policy Instances of an A1 Policy Type should comply with the type's policy data schema.
    type: object
  StatusSchema:
    description: >
      A schema to define the contents of the status information for A1 Policy Instances. 
      Status schemas are Policy Type specific. 
      All status information for all A1 Policy Instances of an A1 Policy Type should comply 
      with the type's status schema.
    type: object
  PolicyStatusObject:
    description: >
      A generic policy status object that can be used to transport any policy status. 
      Additionally, a schema for policy status can be defined in the corresponding A1 Policy Type.
    type: object
  void:
    description: Void/empty
    type: object
  StatusInfo:
    properties:
      status:
        description: Status text
        type: string
    type: object
  RicInfo:
    description: Information for a Near-RT RIC
    properties:
      ricId:
        description: Identity of the Near-RT RIC
        type: string
      managedElementIds:
        description: Identities for managed entities
        items:
          description: Identity for a managed entity
          type: string
        type: array
      state:
        description: Represents the state of a Near-RT RIC
        enum:
          - UNAVAILABLE
          - AVAILABLE
          - SYNCHRONIZING
          - CONSISTENCY_CHECK
        type: string
      policyTypeIds:
        description: Supported A1 Policy Types
        items:
          description: Supported A1 Policy Type ID
          type: string
        type: array
    type: object
  ServiceRegistrationInfo:
    description: Information for a service to be registered
    properties:
      callbackUrl:
        description: Callback URL for notifying of Near-RT RIC state changes
        type: string
      serviceId:
        description: Identity of the service
        type: string
      keepAliveIntervalSeconds:
        description: >
          Keep alive interval for the service. This is used to enable
          optional heartbeat supervision of the service. If set (> 0) the registered
          service should regularly invoke a 'keepalive' REST call. When a service
          fails to invoke this 'keepalive' call within the configured time, the
          service is considered unavailable. An unavailable service will be automatically
          deregistered and its policies will be deleted. Value 0 means timeout
          supervision is disabled.
        format: int64
        type: integer
    required:
      - serviceId
    type: object
  ServiceStatus:
    description: Information about a previously registered service
    properties:
      callbackUrl:
        description: Callback URL for notifying of Near-RT RIC state changes
        type: string
      serviceId:
        description: Identity of the service
        type: string
      keepAliveIntervalSeconds:
        description: >
          Keep alive interval (seconds) for the service. This is used to enable
          optional heartbeat supervision of the service. If set (> 0) the registered
          service should regularly invoke a 'keepalive' REST call. When a service
          fails to invoke this 'keepalive' call within the configured time, the
          service is considered unavailable. An unavailable service will be automatically
          deregistered and its policies will be deleted. Value 0 means timeout
          supervision is disabled.
        format: int64
        type: integer
      timeSinceLastActivitySeconds:
        description: Time (seconds) since last recorded operation by the service
        format: int64
        type: integer
    type: object
  RicInfoList:
    description: Collection of Near-RT RIC information objects
    properties:
      rics:
        description: List of Near-RT RIC information objects
        items:
          $ref: '#/schemas/RicInfo'
        type: array
    type: object
  NearRtRicId:
    description: Identity of the Near-RT RIC
    type: string
  PolicyInformation:
    description: >
      Information tuple for a single A1 Policy Instance. 
      Contains the A1 Policy Instance ID, and the ID of the Near-RT RIC where the policy is created.
    type: object
    properties:
      policyId:
        description: Identity of the A1 Policy Instance
        type: string
      nearRtRicId:
        $ref: '#/schemas/NearRtRicId'
    required:
      - policyId
      - nearRtRicId
  ServiceStatusList:
    properties:
      serviceList:
        description: List of Service Status objects, describing a collection of registered services.
        items:
          $ref: '#/schemas/ServiceStatus'
        type: array
    type: object
  ServiceCallbackInfo:
    description: |
      Information transferred in Service callbacks, 
      if a callback URL was provided for a registered service
    properties:
      ricId:
        description: Identity of a Near-RT RIC
        type: string
      eventType:
        description: >
          values: 
            AVAILABLE: the  Near-RT RIC has become available for A1 Policy management
        enum:
          - AVAILABLE
        type: string
    required:
      - eventType
      - ricId
    type: object
  ProblemDetails:
    description: Object to carry details about a problem in an HTTP response according to IETF RFC 7807
    type: object
    properties:
      type:
        description: URI reference according to IETF RFC 3986 that identifies the problem type
        type: string
      title:
        description: Human-readable summary of the problem type
        type: string
      status:
        description: HTTP status code
        type: number
      detail:
        description: Human-readable explanation
        type: string
      instance:
        description: URI reference that identifies the specific occurrence of the problem
        type: string
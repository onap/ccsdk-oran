schemas:
  policy_type_definition:
    description: Contains A1 Policy Type schema definition
    type: object
    properties:
      policy_schema:
        description: A1 Policy Type json schema. The schema is a json object following
          http://json-schema.org/draft-07/schema
        type: object
  error_information:
    description: Problem as defined in https://tools.ietf.org/html/rfc7807
    properties:
      detail:
        description: ' A human-readable explanation specific to this occurrence
            of the problem.'
        example: A1 Policy Type not found
        type: string
      title:
        description: 'A specific error name'
        type: string
        example: Not Found
      status:
        description: 'The HTTP status code generated by the origin server for this
            occurrence of the problem. '
        example: 404
        format: int32
        type: integer
    type: object
  void:
    description: Void/empty
    type: object
  status_info:
    properties:
      status:
        description: status text
        type: string
    type: object
  authorization_result:
    description: Result of authorization
    example:
      result: true
    properties:
      result:
        description: If true, the access is granted
        type: boolean
    required:
      - result
    type: object
  ric_info:
    description: Information for a Near-RT RIC
    properties:
      ric_id:
        description: identity of the Near-RT RIC
        type: string
      managed_element_ids:
        description: O1 identities for managed entities
        items:
          description: O1 identities for managed entities
          type: string
        type: array
      state:
        description: Represents the states for a Near-RT RIC
        enum:
          - UNAVAILABLE
          - AVAILABLE
          - SYNCHRONIZING
          - CONSISTENCY_CHECK
        type: string
      policytype_ids:
        description: supported A1 Policy Types
        items:
          description: supported A1 Policy Types
          type: string
        type: array
    type: object
  service_registration_info:
    description: Information for one service
    properties:
      callback_url:
        description: Callback for notifying of Near-RT RIC state changes
        type: string
      service_id:
        description: identity of the service
        type: string
      keep_alive_interval_seconds:
        description: >
          Keep alive interval for the service. This is used to enable
          optional heartbeat supervision of the service. If set (> 0) the registered
          service should regularly invoke a 'keepalive' REST call. When a service
          fails to invoke this 'keepalive' call within the configured time, the
          service is considered unavailable. An unavailable service will be automatically
          deregistered and its policies will be deleted. Value 0 means timeout
          supervision is disabled.
        format: int64
        type: integer
    required:
      - service_id
    type: object
  policy_info_list:
    description: List of policy information
    properties:
      policies:
        description: List of policy information
        items:
          $ref: '#/schemas/policy_info'
        type: array
    type: object
  policy_status_info:
    description: Status for one A1-P Policy
    properties:
      last_modified:
        description: timestamp, last modification time
        type: string
      status:
        description: the Policy status
        type: object
    type: object
  service_status:
    properties:
      callback_url:
        description: callback for notifying of RIC synchronization
        type: string
      service_id:
        description: identity of the service
        type: string
      keep_alive_interval_seconds:
        description: policy keep alive timeout
        format: int64
        type: integer
      time_since_last_activity_seconds:
        description: time since last invocation by the service
        format: int64
        type: integer
    type: object
  ric_info_list:
    description: List of Near-RT RIC information
    properties:
      rics:
        description: List of Near-RT RIC information
        items:
          $ref: '#/schemas/ric_info'
        type: array
    type: object
  input:
    description: input
    properties:
      access_type:
        description: Access type
        enum:
          - READ
          - WRITE
          - DELETE
        type: string
      auth_token:
        description: Authorization token
        type: string
      policy_type_id:
        description: A1 Policy Type identifier
        type: string
    required:
      - access_type
      - auth_token
      - policy_type_id
    type: object
  policy_authorization:
    description: Authorization request for A1 policy requests
    properties:
      input:
        $ref: '#/schemas/input'
    required:
      - input
    type: object
  policy_type_id_list:
    description: Information about A1 Policy Types
    properties:
      policytype_ids:
        description: A1 Policy Type identities
        items:
          description: A1 Policy Type identities
          type: string
        type: array
    type: object
  policy_info:
    description: Information for one A1-P Policy
    properties:
      ric_id:
        description: identity of the target Near-RT RIC
        type: string
      policy_id:
        description: identity of the policy
        type: string
      transient:
        default: false
        description: >
          If true, the policy is automatically deleted if the targeted Near-RT RIC restarts 
          or recovers. If false, the A1 Policy Instance remains, and is re-pushed to the targeted 
          Near-RT RIC after a restart or recovery. If false, the A1 Policy Instance is maintained and 
          must be deleted separately in the event of Near-RT RIC restart or recovery. Default is false.
        example: false
        nullable: false
        type: boolean
      service_id:
        description: >
          The identity of the service owning the policy. This can be
          used to group the policies (it is possible to get all policies associated
          to a service). Note that the service does not need to be registered. 
          If the service is registered, the A1 Policy Instance will be 
          subject to the same supervision rules as the the service's other policies.
        type: string
        default: ""
      policy_data:
        description: the configuration of the policy
        type: object
      status_notification_uri:
        description: Callback URI for policy status updates
        type: string
      policytype_id:
        description: identity of the A1 Policy Type
        type: string
    required:
      - ric_id
      - policy_id
      - policy_data
      - policytype_id
    type: object
  policy_id_list:
    description: A list of policy identities
    example:
      policy_ids:
        - policy_ids
        - policy_ids
    properties:
      policy_ids:
        description: Policy identities
        items:
          description: Policy identities
          type: string
        type: array
    type: object
  service_status_list:
    properties:
      service_list:
        description: List of service information
        items:
          $ref: '#/schemas/service_status'
        type: array
    type: object
  service_callback_info_v2:
    description: |
      Information transferred in Service callbacks, 
      if a callback URL was provided for a registered service
    properties:
      ric_id:
        description: identity of a Near-RT RIC
        type: string
      event_type:
        description: >
          values: 
            AVAILABLE: the  Near-RT RIC has become available for A1 Policy management
        enum:
          - AVAILABLE
        type: string
    required:
      - event_type
      - ric_id
    type: object
  Link:
    properties:
      templated:
        type: boolean
      href:
        type: string
    type: object